name: 'CI'

on:
  push:
    branches:
      - master

  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: '‚è≥ Checkout'
      uses: actions/checkout@v3

    - name: '‚¨á Install'
      run: |
        sudo apt update -y
        sudo apt upgrade -y
        sudo apt-get install -y make
        sudo apt-get install -y build-essential
        sudo apt-get install -y libclang-dev
        sudo apt-get install -y ninja-build
        sudo apt-get install -y gcc
        sudo apt-get install -y git
        sudo apt-get install -y bison
        sudo apt-get install -y python3
        sudo apt-get install -y gperf
        sudo apt-get install -y pkg-config
        sudo apt-get install -y libfontconfig1-dev
        sudo apt-get install -y libfreetype6-dev
        sudo apt-get install -y libx11-dev
        sudo apt-get install -y libx11-xcb-dev
        sudo apt-get install -y libxext-dev
        sudo apt-get install -y libxfixes-dev
        sudo apt-get install -y libxi-dev
        sudo apt-get install -y libxrender-dev
        sudo apt-get install -y libxcb1-dev
        sudo apt-get install -y libxcb-glx0-dev
        sudo apt-get install -y libxcb-keysyms1-dev
        sudo apt-get install -y libxcb-image0-dev
        sudo apt-get install -y libxcb-shm0-dev
        sudo apt-get install -y libxcb-icccm4-dev
        sudo apt-get install -y libxcb-sync-dev
        sudo apt-get install -y libxcb-xfixes0-dev
        sudo apt-get install -y libxcb-shape0-dev
        sudo apt-get install -y libxcb-randr0-dev
        sudo apt-get install -y libxcb-render-util0-dev
        sudo apt-get install -y libxcb-util-dev
        sudo apt-get install -y libxcb-xinerama0-dev
        sudo apt-get install -y libxcb-xkb-dev
        sudo apt-get install -y libxkbcommon-dev
        sudo apt-get install -y libxkbcommon-x11-dev
        sudo apt-get install -y libatspi2.0-dev
        sudo apt-get install -y libgl1-mesa-dev
        sudo apt-get install -y libglu1-mesa-dev
        sudo apt-get install -y freeglut3-dev
        sudo apt-get install -y gcc-aarch64-linux-gnu
        sudo apt-get install -y g++-aarch64-linux-gnu
        sudo apt-get install -y rsync
        sudo apt-get install -y symlinks
        sudo apt-get install -y cmake

    - name: 'üèó Build Qt for Host'
      run: |
        cd $HOME
        mkdir qt-host qt-raspi qthost-build qtpi-build
        mkdir rpi-sysroot rpi-sysroot/usr rpi-sysroot/opt
        git clone https://codereview.qt-project.org/qt/qt5
        cd qt5
        git checkout 6.5.1
        perl init-repository -f
        cd ..
        mkdir qt-hostbuild
        cd qt-hostbuild
        cmake ../qt5/ -GNinja -DCMAKE_BUILD_TYPE=Release -DQT_BUILD_EXAMPLES=OFF -DQT_BUILD_TESTS=OFF -DCMAKE_INSTALL_PREFIX=$HOME/qt-host
        cmake --build . --parallel 8
        cmake --install .

  stable-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: 'ü§å Download artifacts'
      uses: actions/download-artifact@v3

    - name: "‚úèÔ∏è Generate release changelog"
      id: changelog
      uses: mikepenz/release-changelog-builder-action@v3
      with:
        toTag: ${{ github.sha }}
        configuration: '.github/workflows/changelog.json'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 'üî• Create stable release'
      uses: softprops/action-gh-release@v1
      with:
        draft: true
        files: artifact/*
        body: ${{steps.changelog.outputs.changelog}}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 'üßπ Remove artifacts'
      uses: geekyeggo/delete-artifact@v2
      with:
        name: 'qt-raspi*'
        failOnError: false

  development-release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v') == false
    permissions:
      contents: write
    steps:
    - name: 'ü§å Download artifacts'
      uses: actions/download-artifact@v3

    - name: 'üßπ Delete old release'
      uses: dev-drprasad/delete-tag-and-release@v0.2.1
      with:
        delete_release: true
        tag_name: development
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: "‚úèÔ∏è Generate release changelog"
      id: changelog
      uses: mikepenz/release-changelog-builder-action@v3
      with:
        toTag: ${{ github.sha }}
        configuration: '.github/workflows/changelog.json'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 'üî• Create development release'
      uses: softprops/action-gh-release@v1
      with:
        draft: false
        name: Development Release
        tag_name: development
        body: |
            **‚ö†Ô∏è This is a development release, and it may be unstable.**
            ${{steps.changelog.outputs.changelog}}
        files: artifact/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 'üßπ Remove artifacts'
      uses: geekyeggo/delete-artifact@v2
      with:
        name: 'qt-raspi*'
        failOnError: false        
